CREATE DATABASE LectureBSA
GO

USE [LectureBSA]
GO

CREATE TABLE [File] (
	[ID] INT IDENTITY(1,1) CONSTRAINT PK_File PRIMARY KEY,
	[FileName] VARCHAR(80) NOT NULL,
	[MimeType] VARCHAR(50) NOT NULL,
	[Key] VARCHAR(200) NOT NULL,
	[URL] VARCHAR(300) NOT NULL,
	[CreatedAt] DATETIME NOT NULL CONSTRAINT DF_CreatedAt DEFAULT GETDATE(),
	[UpdatedAt] DATETIME NOT NULL CONSTRAINT DF_UpdatedAt DEFAULT GETDATE(),
);
GO

CREATE TABLE [User] (
	[ID] INT IDENTITY(1,1) CONSTRAINT PK_User PRIMARY KEY,
	[Username] VARCHAR(30) NOT NULL,
	[FirstName] VARCHAR(30) NOT NULL,
	[LastName] VARCHAR(30) NOT NULL,
	[Email] VARCHAR(60) NOT NULL UNIQUE,
	[Password] VARCHAR(200) NOT NULL,
	[AvatarID] INT NULL CONSTRAINT FK_File_User FOREIGN KEY REFERENCES [File](ID),--Avatar Image,
	[CreatedAt] DATETIME NOT NULL CONSTRAINT DF_CreatedAt DEFAULT GETDATE(),
	[UpdatedAt] DATETIME NOT NULL CONSTRAINT DF_UpdatedAt DEFAULT GETDATE(),
);
GO

CREATE TABLE [Country] (
	[ID] INT IDENTITY(1,1) CONSTRAINT PK_Country PRIMARY KEY,
	[Name] VARCHAR(128) NOT NULL,
	[CreatedAt] DATETIME NOT NULL CONSTRAINT DF_CreatedAt DEFAULT GETDATE(),
	[UpdatedAt] DATETIME NOT NULL CONSTRAINT DF_UpdatedAt DEFAULT GETDATE(),
);
GO

CREATE TABLE [Person] (
	[ID] INT IDENTITY(1,1) CONSTRAINT PK_Person PRIMARY KEY,
	[FirstName] VARCHAR(30) NOT NULL,
	[LastName] VARCHAR(30) NOT NULL,
	[Biography] VARCHAR(MAX) NOT NULL,
	[BirthDate] DATETIME NOT NULL,
	[Gender] VARCHAR(14) NOT NULL CONSTRAINT CK_Gender CHECK ([Gender] IN ('Not known', 'Male', 'Female', 'Not applicable')),
	--[Role] VARCHAR(8) NOT NULL ONSTRAINT CK_Role CHECK ([Role] IN ('Director', 'Actor')), -- DONT KNOW IF THIS IS NEED IT, can a director be an actor ???
	[HomeCountryID] INT NOT NULL CONSTRAINT FK_Country_Person FOREIGN KEY REFERENCES [Country](ID),
	[CreatedAt] DATETIME NOT NULL CONSTRAINT DF_CreatedAt DEFAULT GETDATE(),
	[UpdatedAt] DATETIME NOT NULL CONSTRAINT DF_UpdatedAt DEFAULT GETDATE(),
)
GO

CREATE TABLE [PersonPhoto] (
	[ID] INT IDENTITY(1,1) CONSTRAINT PK_PersonPhoto PRIMARY KEY,
	[IsProfile] BIT NOT NULL CONSTRAINT DF_IsProfile DEFAULT 0,
	[PersonID] INT NOT NULL CONSTRAINT FK_Person_PersonPhoto FOREIGN KEY REFERENCES [Person](ID),
	[PhotoID] INT NOT NULL  CONSTRAINT FK_File_Person FOREIGN KEY REFERENCES [File](ID),
	[CreatedAt] DATETIME NOT NULL CONSTRAINT DF_CreatedAt DEFAULT GETDATE(),
	[UpdatedAt] DATETIME NOT NULL CONSTRAINT DF_UpdatedAt DEFAULT GETDATE(),
)
GO

CREATE TABLE [Movie] (
	[ID] INT IDENTITY(1,1) CONSTRAINT PK_Movie PRIMARY KEY,
	[Title] VARCHAR(30) NOT NULL,
	[Description] VARCHAR(MAX) NOT NULL,
	[Budget] DECIMAL NOT NULL,
	[ReleaseDate] DATETIME NOT NULL,
	[Duration] INT NOT NULL,
	[DirectorID] INT NOT NULL CONSTRAINT FK_Person_Movie FOREIGN KEY REFERENCES [Person](ID),
	[CountryProducedID] INT NOT NULL CONSTRAINT FK_Country_Movie FOREIGN KEY REFERENCES [Country](ID),
	[PosterID] INT NULL CONSTRAINT FK_File_Movie FOREIGN KEY REFERENCES [File](ID),--Poster Image
	[CreatedAt] DATETIME NOT NULL CONSTRAINT DF_CreatedAt DEFAULT GETDATE(),
	[UpdatedAt] DATETIME NOT NULL CONSTRAINT DF_UpdatedAt DEFAULT GETDATE(),
)
GO

CREATE TABLE [Genre] (
	[ID] INT IDENTITY(1,1) CONSTRAINT PK_Genre PRIMARY KEY,
	[Name] VARCHAR(20) NOT NULL,
	[CreatedAt] DATETIME NOT NULL CONSTRAINT DF_CreatedAt DEFAULT GETDATE(),
	[UpdatedAt] DATETIME NOT NULL CONSTRAINT DF_UpdatedAt DEFAULT GETDATE(),
)
GO

CREATE TABLE [MovieGenre] (
	CONSTRAINT PK_MovieGenre PRIMARY KEY ([MovieID], [GenreID]),
	[MovieID] INT NOT NULL CONSTRAINT FK_Movie_MovieGenre FOREIGN KEY REFERENCES [Movie](ID),
	[GenreID] INT NOT NULL CONSTRAINT FK_Genre_MovieGenre FOREIGN KEY REFERENCES [Genre](ID),
	[CreatedAt] DATETIME NOT NULL CONSTRAINT DF_CreatedAt DEFAULT GETDATE(),
	[UpdatedAt] DATETIME NOT NULL CONSTRAINT DF_UpdatedAt DEFAULT GETDATE(),
)
GO

CREATE TABLE [FavoriteMovies] (
	CONSTRAINT PK_FavoriteMovies PRIMARY KEY([MovieID], [UserID]),
	[MovieID] INT NOT NULL CONSTRAINT FK_Movie_FavoriteMovies FOREIGN KEY REFERENCES [Movie](ID),
	[UserID] INT NOT NULL CONSTRAINT FK_User_FavoriteMovies FOREIGN KEY REFERENCES [User](ID),
	[CreatedAt] DATETIME NOT NULL CONSTRAINT DF_CreatedAt DEFAULT GETDATE(),
	[UpdatedAt] DATETIME NOT NULL CONSTRAINT DF_UpdatedAt DEFAULT GETDATE(),
)
GO

CREATE TABLE [Character] (
	[ID] INT IDENTITY(1,1) CONSTRAINT PK_Character PRIMARY KEY,
	[Name] VARCHAR(30) NOT NULL,
	[Description] VARCHAR(MAX) NOT NULL,
	[Role] VARCHAR(10) NOT NULL CONSTRAINT CK_Role CHECK ([Role] IN ('leading', 'supporting', 'background')), --(May i need to create ROLE for the MovieActor relation, to manage the actors that dosent have a character)
	[MovieID] INT NOT NULL CONSTRAINT FK_Movie_Character FOREIGN KEY REFERENCES [Movie](ID), -- (IF ALL THE CHARACTER HAD AN ACTOR I WOULDNT NEED
	--[ActorID] INT CONSTRAINT FK_Person_Character FOREIGN KEY REFERENCES [Person](ID), -- THIS TWO JOIN, I WOULD MAKE A JOIN WITH MovieActor, BUT THIS IS NOT POSIBLE)
	[CreatedAt] DATETIME NOT NULL CONSTRAINT DF_CreatedAt DEFAULT GETDATE(),
	[UpdatedAt] DATETIME NOT NULL CONSTRAINT DF_UpdatedAt DEFAULT GETDATE(),
)

CREATE TABLE [MovieActor] (
	--[ID] INT IDENTITY(1,1) CONSTRAINT PK_MovieActor PRIMARY KEY,
	CONSTRAINT PK_MovieActor PRIMARY KEY([MovieID], [ActorID]),
	[MovieID] INT NOT NULL CONSTRAINT FK_Movie_MovieActor FOREIGN KEY REFERENCES [Movie](ID),
	[ActorID] INT NOT NULL CONSTRAINT FK_Person_MovieActor FOREIGN KEY REFERENCES [Person](ID),
	[CharacterID] INT NULL CONSTRAINT FK_Character_MovieActor FOREIGN KEY REFERENCES [Character](ID), --(NEED TO ANALIZE IF THIS NEED IT OR SHOULD HAVE ActorID in Character Table)
	[CreatedAt] DATETIME NOT NULL CONSTRAINT DF_CreatedAt DEFAULT GETDATE(),
	[UpdatedAt] DATETIME NOT NULL CONSTRAINT DF_UpdatedAt DEFAULT GETDATE(),
)

--CREATE TABLE [MovieCharacterActor] ( --CHARACTER CAN BE PLAY BY MULTIPLE ACTOR ???
--	CONSTRAINT PK_MovieCharacterActor PRIMARY KEY([MovieID], [CharacterID], [ActorID]),
--	[MovieID] INT NOT NULL CONSTRAINT FK_Movie_MovieCharacterActor FOREIGN KEY REFERENCES [Movie](ID),
--	[ActorID] INT NOT NULL CONSTRAINT FK_Person_MovieCharacterActor FOREIGN KEY REFERENCES [Person](ID),
--	[CharacterID] INT NOT NULL CONSTRAINT FK_Character_MovieCharacterActor FOREIGN KEY REFERENCES [Character](ID),
--	[CreatedAt] DATETIME NOT NULL CONSTRAINT DF_CreatedAt DEFAULT GETDATE(),
--	[UpdatedAt] DATETIME NOT NULL CONSTRAINT DF_UpdatedAt DEFAULT GETDATE(),
--)
